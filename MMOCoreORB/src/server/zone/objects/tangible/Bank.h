/*
 *	server/zone/objects/tangible/Bank.h generated by engine3 IDL compiler 0.55
 */

#ifndef BANK_H_
#define BANK_H_

#include "engine/orb/DistributedObjectBroker.h"

class Container;

class CreatureObject;

#include "Container.h"

class Bank : public Container {
public:
	Bank(CreatureObject* creature);

protected:
	Bank(DummyConstructorParameter* param);

	virtual ~Bank();

	friend class BankHelper;
};

class BankImplementation;

class BankAdapter : public ContainerAdapter {
public:
	BankAdapter(BankImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class BankHelper : public DistributedObjectClassHelper, public Singleton<BankHelper> {
	static BankHelper* staticInitializer;

public:
	BankHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BankHelper>;
};

#include "ContainerImplementation.h"

class BankServant : public ContainerImplementation {
public:
	Bank* _this;

public:
	BankServant(unsigned long long oid);
	virtual ~BankServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BANK_H_*/
