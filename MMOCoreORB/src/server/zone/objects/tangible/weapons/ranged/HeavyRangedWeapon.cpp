/*
 *	server/zone/objects/tangible/weapons/ranged/HeavyRangedWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "HeavyRangedWeapon.h"

#include "HeavyRangedWeaponImplementation.h"

#include "../../../creature/CreatureObject.h"

#include "../../../player/Player.h"

#include "../RangedWeapon.h"

/*
 *	HeavyRangedWeaponStub
 */

HeavyRangedWeapon::HeavyRangedWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new HeavyRangedWeaponImplementation(oid, tempCRC, n, tempn, eqp);
	_impl->_setStub(this);
}

HeavyRangedWeapon::HeavyRangedWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new HeavyRangedWeaponImplementation(creature, temp, n, tempn, eqp);
	_impl->_setStub(this);
}

HeavyRangedWeapon::HeavyRangedWeapon(DummyConstructorParameter* param) : RangedWeapon(param) {
}

HeavyRangedWeapon::~HeavyRangedWeapon() {
}

int HeavyRangedWeapon::useObject(Player* player) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		return method.executeWithSignedIntReturn();
	} else
		return ((HeavyRangedWeaponImplementation*) _impl)->useObject(player);
}

/*
 *	HeavyRangedWeaponAdapter
 */

HeavyRangedWeaponAdapter::HeavyRangedWeaponAdapter(HeavyRangedWeaponImplementation* obj) : RangedWeaponAdapter(obj) {
}

Packet* HeavyRangedWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertSignedInt(useObject((Player*) inv->getObjectParameter()));
		break;
	default:
		return NULL;
	}

	return resp;
}

int HeavyRangedWeaponAdapter::useObject(Player* player) {
	return ((HeavyRangedWeaponImplementation*) impl)->useObject(player);
}

/*
 *	HeavyRangedWeaponHelper
 */

HeavyRangedWeaponHelper* HeavyRangedWeaponHelper::staticInitializer = HeavyRangedWeaponHelper::instance();

HeavyRangedWeaponHelper::HeavyRangedWeaponHelper() {
	className = "HeavyRangedWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void HeavyRangedWeaponHelper::finalizeHelper() {
	HeavyRangedWeaponHelper::finalize();
}

DistributedObject* HeavyRangedWeaponHelper::instantiateObject() {
	return new HeavyRangedWeapon(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* HeavyRangedWeaponHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new HeavyRangedWeaponAdapter((HeavyRangedWeaponImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	HeavyRangedWeaponServant
 */

HeavyRangedWeaponServant::HeavyRangedWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(oid, tempCRC, n, tempn, tp, eqp) {
	_classHelper = HeavyRangedWeaponHelper::instance();
}

HeavyRangedWeaponServant::HeavyRangedWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = HeavyRangedWeaponHelper::instance();
}

HeavyRangedWeaponServant::~HeavyRangedWeaponServant() {
}

void HeavyRangedWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (HeavyRangedWeapon*) stub;
	RangedWeaponServant::_setStub(stub);
}

DistributedObjectStub* HeavyRangedWeaponServant::_getStub() {
	return _this;
}

