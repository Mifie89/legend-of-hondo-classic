/*
 *	server/zone/objects/tangible/pharmaceutical/CureAreaPack.h generated by engine3 IDL compiler 0.55
 */

#ifndef CUREAREAPACK_H_
#define CUREAREAPACK_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class CreatureObject;

class Player;

class TangibleObject;

class Pharmaceutical;

#include "Pharmaceutical.h"

class CureAreaPack : public Pharmaceutical {
public:
	CureAreaPack(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	CureAreaPack(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	void generateAttributes(SceneObject* obj);

	void setEffectiveness(float eff);

	void setAreaOfEffect(float area);

	void setState(unsigned long long condition);

	float getEffectiveness();

	unsigned long long getState();

protected:
	CureAreaPack(DummyConstructorParameter* param);

	virtual ~CureAreaPack();

	friend class CureAreaPackHelper;
};

class CureAreaPackImplementation;

class CureAreaPackAdapter : public PharmaceuticalAdapter {
public:
	CureAreaPackAdapter(CureAreaPackImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void generateAttributes(SceneObject* obj);

	void setEffectiveness(float eff);

	void setAreaOfEffect(float area);

	void setState(unsigned long long condition);

	float getEffectiveness();

	unsigned long long getState();

};

class CureAreaPackHelper : public DistributedObjectClassHelper, public Singleton<CureAreaPackHelper> {
	static CureAreaPackHelper* staticInitializer;

public:
	CureAreaPackHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CureAreaPackHelper>;
};

#include "PharmaceuticalImplementation.h"

class CureAreaPackServant : public PharmaceuticalImplementation {
public:
	CureAreaPack* _this;

public:
	CureAreaPackServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int mptype);
	CureAreaPackServant(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int mptype);
	virtual ~CureAreaPackServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CUREAREAPACK_H_*/
