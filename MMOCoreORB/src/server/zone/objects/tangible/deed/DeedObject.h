/*
 *	server/zone/objects/tangible/deed/DeedObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef DEEDOBJECT_H_
#define DEEDOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

class packets;

class Player;

class CreatureObject;

class SceneObject;

#include "../TangibleObject.h"

class DeedObject : public TangibleObject {
public:
	DeedObject(CreatureObject* creature, int tempCRC, const unicode& n, const string& tempn);

	DeedObject(unsigned long long oid, int tempCRC, const unicode& n, const string& tempn);

	unicode& getTargetName();

	string& getTargetFile();

	string& getTargetTemplate();

	void setTargetFile(string& path);

	string& getTargetTempFile();

	int useObject(Player* player);

	void generateAttributes(SceneObject* obj);

	int getHarvesterType();

protected:
	DeedObject(DummyConstructorParameter* param);

	virtual ~DeedObject();

	string _return_getTargetFile;
	string _return_getTargetTempFile;
	string _return_getTargetTemplate;

	unicode _return_getTargetName;

	friend class DeedObjectHelper;
};

class DeedObjectImplementation;

class DeedObjectAdapter : public TangibleObjectAdapter {
public:
	DeedObjectAdapter(DeedObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	unicode& getTargetName();

	string& getTargetFile();

	string& getTargetTemplate();

	void setTargetFile(string& path);

	string& getTargetTempFile();

	int useObject(Player* player);

	void generateAttributes(SceneObject* obj);

	int getHarvesterType();

protected:
	string _param0_setTargetFile__string_;
};

class DeedObjectHelper : public DistributedObjectClassHelper, public Singleton<DeedObjectHelper> {
	static DeedObjectHelper* staticInitializer;

public:
	DeedObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<DeedObjectHelper>;
};

#include "../TangibleObjectImplementation.h"

class DeedObjectServant : public TangibleObjectImplementation {
public:
	DeedObject* _this;

public:
	DeedObjectServant(CreatureObject* creature, int tempCRC, const unicode& n, const string& tempn, int tp);
	DeedObjectServant(unsigned long long oid, int tempCRC, const unicode& n, const string& tempn, int tp);
	virtual ~DeedObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*DEEDOBJECT_H_*/
