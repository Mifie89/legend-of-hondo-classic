/*
 *	server/zone/objects/installation/factory/FactoryObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef FACTORYOBJECT_H_
#define FACTORYOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

class CreatureObject;

class Player;

class FactoryDeed;

class InstallationObject;

class Zone;

#include "engine/service/Message.h"

#include "../InstallationObject.h"

class FactoryObject : public InstallationObject {
public:
	FactoryObject(unsigned long long oid);

	FactoryObject(unsigned long long oid, FactoryDeed* theDeed);

protected:
	FactoryObject(DummyConstructorParameter* param);

	virtual ~FactoryObject();

	friend class FactoryObjectHelper;
};

class FactoryObjectImplementation;

class FactoryObjectAdapter : public InstallationObjectAdapter {
public:
	FactoryObjectAdapter(FactoryObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class FactoryObjectHelper : public DistributedObjectClassHelper, public Singleton<FactoryObjectHelper> {
	static FactoryObjectHelper* staticInitializer;

public:
	FactoryObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<FactoryObjectHelper>;
};

#include "../InstallationObjectImplementation.h"

class FactoryObjectServant : public InstallationObjectImplementation {
public:
	FactoryObject* _this;

public:
	FactoryObjectServant(unsigned long long oid);
	FactoryObjectServant(unsigned long long oid, FactoryDeed* theDeed);
	virtual ~FactoryObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*FACTORYOBJECT_H_*/
